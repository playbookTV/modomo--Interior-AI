FROM python:3.11-slim

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl wget git gcc g++ build-essential \
    libgl1-mesa-dev libglu1-mesa-dev libglx-mesa0 mesa-common-dev \
    libglib2.0-0 libsm6 libxext6 libxrender-dev libgomp1 \
    libnspr4 libnss3 libdbus-1-3 libatk1.0-0 libatk-bridge2.0-0 \
    libcups2 libxkbcommon0 libatspi2.0-0 libxcomposite1 libxdamage1 \
    libxrandr2 libgbm1 libcairo2 libpango-1.0-0 libasound2 libgtk-3-0 \
    fonts-liberation fonts-unifont libgdk-pixbuf-2.0-0 libjpeg62-turbo xvfb \
    && rm -rf /var/lib/apt/lists/* && apt-get clean

WORKDIR /app

# Environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PORT=8001
ENV AI_MODE=full
ENV MODEL_CACHE_DIR=/app/models
ENV TRANSFORMERS_CACHE=/app/models/huggingface
ENV HF_HOME=/app/models/huggingface
ENV SENTENCE_TRANSFORMERS_HOME=/app/models/sentence_transformers
ENV SAM2_CHECKPOINT_DIR=/app/models/sam2
ENV CLIP_CACHE_DIR=/app/models/clip
ENV YOLO_CACHE_DIR=/app/models/yolo

# Copy requirements and install dependencies (NO MODEL DOWNLOADS HERE)
COPY requirements-railway-complete.txt ./
RUN pip install --upgrade pip setuptools wheel && \
    pip install --no-cache-dir \
    "torch==2.1.2+cpu" \
    "torchvision==0.16.2+cpu" \
    "torchaudio==2.1.2+cpu" \
    -f https://download.pytorch.org/whl/torch_stable.html && \
    pip install --no-cache-dir -r requirements-railway-complete.txt && \
    pip install --no-cache-dir \
    git+https://github.com/facebookresearch/segment-anything-2.git \
    git+https://github.com/openai/CLIP.git \
    iopath hydra-core omegaconf

# Install Playwright browsers
RUN python -m playwright install chromium || echo "⚠️ Playwright install failed, will retry at runtime"

# Create directories (Railway volume will mount over /app/models)
RUN mkdir -p /app/temp /app/downloads /app/checkpoints /app/models

# Copy application code
COPY . .

# Ensure models directory is properly accessible
RUN mkdir -p /app/models_cache

# Set Python path to include current app directory
ENV PYTHONPATH=/app
ENV CLASSIFICATION_ENHANCED=true
ENV KEYWORD_SYSTEM_VERSION=2.0

# Copy and set up smart startup script
COPY smart-start.sh /app/smart-start.sh
RUN chmod +x /app/smart-start.sh

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=180s --retries=3 \
    CMD curl -f http://localhost:8001/health || exit 1

# Use smart startup script
CMD ["/app/smart-start.sh"]